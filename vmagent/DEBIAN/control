Package: victoria-metrics
Source: victoriametrics (1.53.1+ds-1)
Version: 1.53.1+ds-1+b5
Architecture: amd64
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Installed-Size: 79452
Pre-Depends: init-system-helpers (>= 1.54~)
Depends: adduser, libc6 (>= 2.14), libzstd1 (>= 1.4.0)
Built-Using: go-md2man-v2 (= 2.0.0+ds-5), golang-1.15 (= 1.15.9-6), golang-blackfriday-v2 (= 2.0.1-3), golang-github-aws-aws-sdk-go (= 1.36.33-1), golang-github-beorn7-perks (= 1.0.1-1), golang-github-cespare-xxhash (= 2.1.1-1), golang-github-fatih-color (= 1.7.0-1), golang-github-go-kit-kit (= 0.6.0-3), golang-github-go-logfmt-logfmt (= 0.5.0-2), golang-github-go-stack-stack (= 1.8.0-1), golang-github-golang-groupcache (= 0.0~git20200121.8c9f03a-1), golang-github-golang-snappy (= 0.0.2-2), golang-github-googleapis-gax-go (= 2.0.5-1), golang-github-jmespath-go-jmespath (= 0.4.0-1), golang-github-klauspost-compress (= 1.11.7-2), golang-github-mattn-go-colorable (= 0.1.7-1), golang-github-mattn-go-isatty (= 0.0.12-1), golang-github-mattn-go-runewidth (= 0.0.9-1), golang-github-oklog-ulid (= 2.0.2+ds-2), golang-github-pkg-errors (= 0.9.1-1), golang-github-prometheus-client-golang (= 1.9.0-2), golang-github-prometheus-client-model (= 0.2.0-2), golang-github-prometheus-common (= 0.15.0-2), golang-github-prometheus-procfs (= 0.3.0-2), golang-github-shurcool-sanitized-anchor-name (= 1.0.0-1), golang-github-urfave-cli-v2 (= 2.2.0-3), golang-github-valyala-bytebufferpool (= 1.0.0-2), golang-github-valyala-fastjson (= 1.6.3-3), golang-github-valyala-fastrand (= 1.0.0-3), golang-github-valyala-fasttemplate (= 1.2.1-1), golang-github-valyala-gozstd (= 1.9.0+ds-7), golang-github-valyala-histogram (= 1.1.2+ds-3), golang-github-valyala-quicktemplate (= 1.6.3+ds-3), golang-github-victoriametrics-fastcache (= 1.5.7-2), golang-github-victoriametrics-metrics (= 1.13.1+ds-1), golang-github-victoriametrics-metricsql (= 0.10.0+ds-1), golang-github-vividcortex-ewma (= 1.1.1-2), golang-go.opencensus (= 0.22.4-2), golang-go.uber-atomic (= 1.4.0-1), golang-golang-x-net (= 1:0.0+git20210119.5f4716e+dfsg-4), golang-golang-x-oauth2 (= 0.0~git20190604.0f29369-2), golang-golang-x-sync (= 0.0~git20210220.036812b-1), golang-golang-x-sys (= 0.0~git20210124.22da62e-1), golang-golang-x-text (= 0.3.6-1), golang-google-api (= 0.28.0-2), golang-google-cloud (= 0.56.0-1), golang-google-genproto (= 0.0~git20200413.b5235f6-1), golang-google-grpc (= 1.27.1-1), golang-goprotobuf (= 1.3.4-2), golang-protobuf-extensions (= 1.0.1-1), golang-yaml.v2 (= 2.4.0-1)
Section: net
Priority: optional
Multi-Arch: foreign
Homepage: https://github.com/VictoriaMetrics/VictoriaMetrics
Description: fast, cost-effective and scalable time series database
 VictoriaMetrics is a fast, cost-effective and scalable time-series database.
 It can be used as long-term remote storage for Prometheus.
 .
 Prominent features:
  * Supports Prometheus querying API, so it can be used as Prometheus
    drop-in replacement in Grafana. VictoriaMetrics implements MetricsQL
    query language, which is inspired by PromQL.
  * Supports global query view. Multiple Prometheus instances may write
    data into VictoriaMetrics. Later this data may be used in a single query.
  * High performance and good scalability for both inserts and selects.
    Outperforms InfluxDB and TimescaleDB by up to 20x.
  * Uses 10x less RAM than InfluxDB when working with millions of unique time
    series (aka high cardinality).
  * Optimized for time series with high churn rate. Think about
    prometheus-operator metrics from frequent deployments in Kubernetes.
  * High data compression, so up to 70x more data points may be crammed into
    limited storage comparing to TimescaleDB.
  * Optimized for storage with high-latency IO and low IOPS (HDD and network
    storage in AWS, Google Cloud, Microsoft Azure, etc).
  * A single-node VictoriaMetrics may substitute moderately sized clusters
    built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or
    TimescaleDB.
  * Easy operation:
    - VictoriaMetrics consists of a single small executable without external
      dependencies.
    - All the configuration is done via explicit command-line flags with
      reasonable defaults.
    - All the data is stored in a single directory pointed by
      -storageDataPath flag.
    - Easy and fast backups from instant snapshots to S3 or GCS with
      vmbackup / vmrestore.
    - Data migration between VictoriaMetrics, Prometheus and InfluxDB with
      vmctl.
  * Storage is protectedfrom corruption on unclean shutdown (i.e. OOM,
    hardware reset or kill -9) thanks to the storage architecture.
  * Supports metrics' scraping, ingestion and backfilling (#backfilling)
    via the following protocols:
    - Metrics from Prometheus exporters such as node_exporter.
    - Prometheus remote write API
    - InfluxDB line protocol
    - Graphite plaintext protocol with tags if -graphiteListenAddr is set.
    - OpenTSDB put message if -opentsdbListenAddr is set.
    - HTTP OpenTSDB /api/put requests if -opentsdbHTTPListenAddr is set.
    - /api/v1/import.
  * Ideally works with big amounts of time series data from Kubernetes, IoT
    sensors, connected cars, industrial telemetry, financial data and
    various Enterprise workloads.
  * Has open source cluster version.
